# This is a basic workflow to help you get started with Actions

name: TestCacheClobber

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  MY_DEPENDENCY_FLAGS: "-Lprimesieve -Wl,-rpath=primesieve -Iprimesieve/include"
  MY_LLVM_VER: 17
  OMP_DISPLAY_ENV: TRUE
  OMP_DISPLAY_AFFINITY: TRUE
  OMP_PROC_BIND: TRUE
  OMP_PLACES: threads

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-24.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Set up environment
      - name: Setup
        run: |
          git rev-parse --short HEAD
          sudo apt-get update
          sudo apt-get install llvm-$MY_LLVM_VER clang-$MY_LLVM_VER autoconf-archive libomp-$MY_LLVM_VER-dev hwloc linux-tools-generic
          perf config llvm.clang-path=clang-$MY_LLVM_VER
          chmod a+x addr2line
          chmod a+x objdump
          PATH=`pwd`:$PATH which addr2line
          PATH=`pwd`:$PATH which objdump
          echo "lstopo-no-graphics says:"
          lstopo-no-graphics -p
          echo "lscpu says:"
          lscpu
          bash scripts/SetupPrimeSieve.sh
          clang++-$MY_LLVM_VER -std=c++20 -Wall -O3 -march=native -fopenmp $MY_DEPENDENCY_FLAGS test/PrimeCacheClobber.cpp -lprimesieve -o PrimeCacheClobber

      # Run code straight, no profiling.
      - name: Run
        run: |
          perf stat ./PrimeCacheClobber
