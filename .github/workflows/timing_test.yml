# This is a basic workflow to help you get started with Actions

name: TimeIt

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      # Set up environment
      - name: Setup
        run: |
          sudo apt-get update
          sudo apt-get install libmpfr-dev libprimesieve-dev gnuplot

      # Compile code
      - name: Compile
        run: |
          git rev-parse --short HEAD
          clang++ -fprofile-instr-generate=code.profraw -std=c++20 -DNDEBUG -Wall -O3 -flto -march=native -lmpfr -lprimesieve Search.cpp -o Search
          ./Search 38
          llvm-profdata merge -output=code.profdata code.profraw
          clang++ -fprofile-instr-use=code.profdata -std=c++20 -DNDEBUG -Wall -O3 -flto -march=native -lmpfr -lprimesieve Search.cpp -o Search

      # Run code straight, no profiling.
      - name: Run
        run: ./Search 43

     # Compile code from main branch
      - name: Compile main
        run: |
          git checkout main
          git rev-parse --short HEAD
          clang++ -std=c++20 -DNDEBUG -Wall -O3 -flto -march=native -lmpfr -lprimesieve Search.cpp -o Search

      # Run main code straight, no profiling.
      - name: Run main
        run: ./Search 43
