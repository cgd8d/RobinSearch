# This is a basic workflow to help you get started with Actions

name: TimePrimeGen

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  MY_DEPENDENCY_FLAGS: "-Lprimesieve -Wl,-rpath=primesieve -Iprimesieve/include"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Set up environment
      - name: Setup
        run: |
          sudo apt-get update
          sudo apt-get install clang-12

      # build libprimesieve
      - name: SetupPrimeSieve
        run: bash scripts/SetupPrimeSieve_main.sh

      # Time the summing of primes.
      - name: RunTimerSumPrimes
        run: |
          clang++-12 -std=c++20 -Wall -O3 -march=native -Wl,-plugin-opt=whole-program-visibility $MY_DEPENDENCY_FLAGS test/TimerPrimeGen1.cpp -lprimesieve -o TimerPrimeGen1
          ./TimerPrimeGen1
